Q1.Cocoa Confections
Cocoa Confections is a small bakery that sells brownies, cookies, pies, and other
delicious treats to customers online. It keeps records of all of its online sales in an
SQL database that is automatically populated as customers place orders on its site.
In its database, Cocoa Confections has a customers table to keep track of customer
contact information, and an orders table to keep track of various orders that those
customers have placed. The schema of these tables is as follows:
CREATE TABLE customers (
customer_id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
first_name VARCHAR(255) NOT NULL,
last_name VARCHAR(255) NOT NULL,
email VARCHAR(255) NOT NULL,
address VARCHAR(255) DEFAULT NULL,
city VARCHAR(255) DEFAULT NULL,
state VARCHAR(2) DEFAULT NULL,
zip_code VARCHAR(5) DEFAULT NULL
);
CREATE TABLE orders (
order_id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
customer_id INT NOT NULL,
order_placed_date DATE NOT NULL,
FOREIGN KEY (customer_id) REFERENCES customers
(customer_id)
);
It's the end of 2016, and the owner of Cocoa Confections wants to write an SQL
query that finds the COUNT of orders placed in 2016 by customer e-mail address.
She wants to ORDER the results by the COUNT of orders placed in 2016,
descending, so that she can personally send thank-you e-mails to Cocoa
Confection's top customers by order volume.
Can you write a query that will help the owner of Cocoa Confections find the
COUNT of all orders placed in 2016, by customer e-mail address, sorted
descending?

Ans->

mysql> SELECT count(order_placed_date) as Count,c.first_name,c.last_name, c.email,o.order_placed_date FROM orders o,customers c WHERE c.customer_id=o.customer_id and YEAR(o.order_placed_date) = 2016   group by o.customer_id order by count(o.order_placed_date) desc;
+-------+------------+-----------+-------------------+-------------------+
| Count | first_name | last_name | email             | order_placed_date |
+-------+------------+-----------+-------------------+-------------------+
|     3 | mohan      | kumar     | xez@gmail.com     | 2016-06-15        |
|     1 | abhi       | kumar     | xyz@gmail.com     | 2016-12-15        |
|     1 | sohan      | kundu     | jkez@gmail.com    | 2016-08-25        |
|     1 | Iaha       | Kataria   | Kataria@gmail.com | 2016-02-25        |
|     1 | Varun      | Metha     | varun@gmail.com   | 2016-03-29        |
|     1 | Aman       | Vats      | vats@gmail.com    | 2016-04-29        |
+-------+------------+-----------+-------------------+-------------------+
6 rows in set (0.00 sec)



Question 2:-

Normalization-(a) It is the process by which we can simplyfy our data or we can say that we can remove duplicate and unnescessary data from the table
	          it is multi step process by which we can represent our data without any duplication or complexity.
                  it also helps to orginise the data in database ;
                  it also helps to reduce and remove duplicate entry form table;
                  it also helps to reduce the anomalies at the time of update,delete and insert at the table;

Normalization is necessary to ensure that the table only contains data directly related to the primary key, each data field contains only one data element, and to remove duplicated and unnecessary data.


Second Normal Form (2NF):-->
Second Normal Form (2NF) is based on the concept of full functional dependency. Second Normal Form applies to relations with composite keys, that is, relations with a primary key composed of two or more attributes. A relation with a single-attribute primary key is automatically in at least 2NF. A relation that is not in 2NF may suffer from the update anomalies.

 To be in second normal form, a relation must be in first normal form a.
 
befor 2ND Normal form 

STUD_NO            COURSE_NO        COURSE_FEE
1                     C1                  1000
2                     C2                  1500
1                     C4                  2000
4                     C3                  1000
4                     C1                  1000
2                     C5                  2000

after 2nd normal form 

STUD_NO            COURSE_NO          COURSE_NO                COURSE_FEE     
1                 C1                  C1                        1000
2                 C2                  C2                        1500
1                 C4                  C3                        1000
4                 C3                  C4                        2000
4                 C1                  C5                        2000        
2                 C5        

Question 3-->
 transaction is a single logical unit of work that accesses and possibly modifies the contents of a database. Transactions access data using read and write operations. 
In order to maintain consistency in a database, before and after the transaction, certain properties are followed. These are called ACID properties. 

There are four propties of ACID in DBMS:-
1.Atomicity
2.Consistency
3.Isolation
4.Durablity

Atomicity-->Entire tranction take place at once or does't happend.

Consistency--> Database remain consistant before and after transcation;

Isolation--> Multiple transcation occurs indepentantly whithout interferance;

Durablity--> Change of successful transcaton occurs even after systme failure;


Disadvantage of indexing-->
insert Update and delete statement become Slow
