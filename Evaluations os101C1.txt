1.a)Difference between tight coupling and loose coupling.
b) What is the Difference between High Cohesion and Low Cohesion? Also
provide Examples.

a:=> Difference between tight coupling and loose coupling.
    a)Tight coupling decrese the code reusablity but loose coupling increase the reusablity.
    b)Tight coupling incerese the code dependency of one class to another but loose coupling decrease the code depencency of one class to another.
    c)Tight coupling doesn't provide interface programing but loose coupling can be achive thorugh interface.
    d)Tight coupling does not have the changing capability. But loose coupling is highly changeable.

b:->Difference between high cohesion and low cohesion:
a) High cohesion is when you have a class that does a well-defined mehod. Low cohesion is when a class does a    lot of method and they dont realetd to each other and the class have multiple purpose to serve.
 b) High cohesion gives us better-maintaining facility and Low cohesion results in that are difficult to maintain, understand and reduce re-usability.
 c) High cohesion is when a class have only only one Responseblity to serve. Low cohesion is when a class does multiple Responseblity to serve.it reduse code reuseablity and it increase dependency on other class.
 
Q2 a) Explain DRY principle and how can we achieve it
b) Explain the KISS principle with Example.

a) DRY means Do not repat yourself this principle basically used to reduce the code repetition.
 DRY Principle says that a class only single responceblity or logic to impliment.it reduce the repetition of code. 
How to Achieve DRY
To avoid violating the DRY principle, divide your system into pieces. Divide your code and logic into smaller reusable units and use
that code by calling it where you want. Don't write lengthy methods, but divide logic and try to use the existing piece in your method.

KISS:-> KISS means keep it simple The KISS principle says that keep the code simple and clear, making it easy to understand.
Each method should only solve one small problem, not many use cases. If you have a lot of conditions in the method, break these out into smaller methods. It will not only be easier to read and maintain, but it can help find bugs a lot faster.



Q3 What is Pessimistic Locking and Optimistic Locking?

Pessimistic Locking is when you lock the record for your exclusive use until you have finished with it.
It has much better than optimistic locking but requires you to be careful with your application design to avoid Deadlocks.

Optimistic Locking is a strategy where you read a record, take note of a version number (other methods to do this involve dates, timestamps or checksums/hashes) and check that the version
optimistic locking is based on detecting changes on entities by checking their version attribute.

4.What is a DeadLock ? And what are methods by which we can handle deadLock.
A Deadlock is a situation where each of the computer process waits for a resource which is being assigned to some another process. In this situation, none of the process gets executed since the resource it needs, is held by some other process which is also waiting for some other resource to be released. this codition is called deadlock.
there are Three ways we can handle deadlock:=>
a) Deadlock prevention
b) Deadlock avoidance
c)Deadlock detection and recovery


Q5. What is a HTTP protocol? Difference between HTTP and HTTPS.

HTTP Stands for "Hypertext Transfer Protocol." HTTP is the protocol used to transfer data over the web. It is part of the Internet protocol suite and defines commands and services used for transmitting webpage data. HTTP uses a server-client model. A client, for example, may be home computer, laptop, or mobile device.

Difference between HTTP and HTTPS.
HTTP does not require any certificates and HTTPS needs SSL Certificates
HTTP speed is faster than HTTPS and HTTPS speed is slower than HTTP
HTTP does not improve search ranking while HTTPS improves search ranking.
HTTP does not use data hashtags to secure data, while HTTPS will have the data before sending it and return it to its original state on the receiver side.
Difference between HTTP and HTTPS.

HTTP does not require any certificates and HTTPS needs SSL Certificates
HTTP speed is faster than HTTPS and HTTPS speed is slower than HTTP
HTTP does not improve search ranking while HTTPS improves search ranking.
HTTP does not use data hashtags to secure data, while HTTPS will have the data before sending it and return it to its original state on the receiver side.

